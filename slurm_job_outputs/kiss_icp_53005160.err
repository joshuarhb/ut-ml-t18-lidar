  error: subprocess-exited-with-error
  
  × Getting requirements to build wheel did not run successfully.
  │ exit code: 1
  ╰─> [33 lines of output]
      Traceback (most recent call last):
        File "/gpfs/helios/home/joshua1/miniconda3/envs/lidar_project/lib/python3.12/site-packages/pip/_vendor/pyproject_hooks/_in_process/_in_process.py", line 353, in <module>
          main()
        File "/gpfs/helios/home/joshua1/miniconda3/envs/lidar_project/lib/python3.12/site-packages/pip/_vendor/pyproject_hooks/_in_process/_in_process.py", line 335, in main
          json_out['return_val'] = hook(**hook_input['kwargs'])
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File "/gpfs/helios/home/joshua1/miniconda3/envs/lidar_project/lib/python3.12/site-packages/pip/_vendor/pyproject_hooks/_in_process/_in_process.py", line 112, in get_requires_for_build_wheel
          backend = _build_backend()
                    ^^^^^^^^^^^^^^^^
        File "/gpfs/helios/home/joshua1/miniconda3/envs/lidar_project/lib/python3.12/site-packages/pip/_vendor/pyproject_hooks/_in_process/_in_process.py", line 77, in _build_backend
          obj = import_module(mod_path)
                ^^^^^^^^^^^^^^^^^^^^^^^
        File "/gpfs/helios/home/joshua1/miniconda3/envs/lidar_project/lib/python3.12/importlib/__init__.py", line 90, in import_module
          return _bootstrap._gcd_import(name[level:], package, level)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File "<frozen importlib._bootstrap>", line 1387, in _gcd_import
        File "<frozen importlib._bootstrap>", line 1360, in _find_and_load
        File "<frozen importlib._bootstrap>", line 1310, in _find_and_load_unlocked
        File "<frozen importlib._bootstrap>", line 488, in _call_with_frames_removed
        File "<frozen importlib._bootstrap>", line 1387, in _gcd_import
        File "<frozen importlib._bootstrap>", line 1360, in _find_and_load
        File "<frozen importlib._bootstrap>", line 1331, in _find_and_load_unlocked
        File "<frozen importlib._bootstrap>", line 935, in _load_unlocked
        File "<frozen importlib._bootstrap_external>", line 995, in exec_module
        File "<frozen importlib._bootstrap>", line 488, in _call_with_frames_removed
        File "/tmp/pip-build-env-po1emli6/overlay/lib/python3.12/site-packages/setuptools/__init__.py", line 16, in <module>
          import setuptools.version
        File "/tmp/pip-build-env-po1emli6/overlay/lib/python3.12/site-packages/setuptools/version.py", line 1, in <module>
          import pkg_resources
        File "/tmp/pip-build-env-po1emli6/overlay/lib/python3.12/site-packages/pkg_resources/__init__.py", line 2191, in <module>
          register_finder(pkgutil.ImpImporter, find_on_path)
                          ^^^^^^^^^^^^^^^^^^^
      AttributeError: module 'pkgutil' has no attribute 'ImpImporter'. Did you mean: 'zipimporter'?
      [end of output]
  
  note: This error originates from a subprocess, and is likely not a problem with pip.
error: subprocess-exited-with-error

× Getting requirements to build wheel did not run successfully.
│ exit code: 1
╰─> See above for output.

note: This error originates from a subprocess, and is likely not a problem with pip.
/gpfs/helios/home/joshua1/miniconda3/envs/lidar_project/lib/python3.12/site-packages/kiss_icp/datasets/ncd.py:75: SyntaxWarning: invalid escape sequence '\d'
  regex = re.compile("^cloud_(\d*_\d*)")
╭───────────────────── Traceback (most recent call last) ──────────────────────╮
│ /gpfs/helios/home/joshua1/miniconda3/envs/lidar_project/lib/python3.12/site- │
│ packages/kiss_icp/tools/cmd.py:232 in kiss_icp_pipeline                      │
│                                                                              │
│   229 │   from kiss_icp.datasets import dataset_factory                      │
│   230 │   from kiss_icp.pipeline import OdometryPipeline                     │
│   231 │                                                                      │
│ ❱ 232 │   OdometryPipeline(                                                  │
│   233 │   │   dataset=dataset_factory(                                       │
│   234 │   │   │   dataloader=dataloader,                                     │
│   235 │   │   │   data_dir=data,                                             │
│                                                                              │
│ ╭───────────────────────────────── locals ─────────────────────────────────╮ │
│ │     config = None                                                        │ │
│ │       data = PosixPath('/gpfs/space/projects/mlcourse/2024/t18-lidar/gr… │ │
│ │ dataloader = 'generic'                                                   │ │
│ │     deskew = None                                                        │ │
│ │       jump = 0                                                           │ │
│ │  max_range = None                                                        │ │
│ │       meta = None                                                        │ │
│ │    n_scans = -1                                                          │ │
│ │   sequence = None                                                        │ │
│ │      topic = None                                                        │ │
│ │    version = None                                                        │ │
│ │  visualize = True                                                        │ │
│ ╰──────────────────────────────────────────────────────────────────────────╯ │
│                                                                              │
│ /gpfs/helios/home/joshua1/miniconda3/envs/lidar_project/lib/python3.12/site- │
│ packages/kiss_icp/pipeline.py:79 in __init__                                 │
│                                                                              │
│    76 │   │   )                                                              │
│    77 │   │                                                                  │
│    78 │   │   # Visualizer                                                   │
│ ❱  79 │   │   self.visualizer = Kissualizer() if visualize else StubVisualiz │
│    80 │   │   self._vis_infos = {                                            │
│    81 │   │   │   "max_range": self.config.data.max_range,                   │
│    82 │   │   │   "min_range": self.config.data.min_range,                   │
│                                                                              │
│ ╭───────────────────────────────── locals ─────────────────────────────────╮ │
│ │    config = None                                                         │ │
│ │   dataset = <kiss_icp.datasets.generic.GenericDataset object at          │ │
│ │             0x155282f04bc0>                                              │ │
│ │    deskew = None                                                         │ │
│ │      jump = 0                                                            │ │
│ │ max_range = None                                                         │ │
│ │   n_scans = -1                                                           │ │
│ │      self = <kiss_icp.pipeline.OdometryPipeline object at                │ │
│ │             0x155282f05f40>                                              │ │
│ │ visualize = True                                                         │ │
│ ╰──────────────────────────────────────────────────────────────────────────╯ │
│                                                                              │
│ /gpfs/helios/home/joshua1/miniconda3/envs/lidar_project/lib/python3.12/site- │
│ packages/kiss_icp/tools/visualizer.py:89 in __init__                         │
│                                                                              │
│    86 │   │   self._selected_pose = ""                                       │
│    87 │   │                                                                  │
│    88 │   │   # Initialize Visualizer                                        │
│ ❱  89 │   │   self._initialize_visualizer()                                  │
│    90 │                                                                      │
│    91 │   def update(self, source, keypoints, target_map, pose, vis_infos: d │
│    92 │   │   self._vis_infos = dict(sorted(vis_infos.items(), key=lambda it │
│                                                                              │
│ ╭──────────────────────────────── locals ─────────────────────────────────╮  │
│ │ self = <kiss_icp.tools.visualizer.Kissualizer object at 0x155268c52e70> │  │
│ ╰─────────────────────────────────────────────────────────────────────────╯  │
│                                                                              │
│ /gpfs/helios/home/joshua1/miniconda3/envs/lidar_project/lib/python3.12/site- │
│ packages/kiss_icp/tools/visualizer.py:104 in _initialize_visualizer          │
│                                                                              │
│   101 │   # Private Interface ---------------------------------------------- │
│   102 │   def _initialize_visualizer(self):                                  │
│   103 │   │   self._ps.set_program_name("KissICP Visualizer")                │
│ ❱ 104 │   │   self._ps.init()                                                │
│   105 │   │   self._ps.set_ground_plane_mode("none")                         │
│   106 │   │   self._ps.set_background_color(BACKGROUND_COLOR)                │
│   107 │   │   self._ps.set_verbosity(0)                                      │
│                                                                              │
│ ╭──────────────────────────────── locals ─────────────────────────────────╮  │
│ │ self = <kiss_icp.tools.visualizer.Kissualizer object at 0x155268c52e70> │  │
│ ╰─────────────────────────────────────────────────────────────────────────╯  │
│                                                                              │
│ /gpfs/helios/home/joshua1/miniconda3/envs/lidar_project/lib/python3.12/site- │
│ packages/polyscope/core.py:15 in init                                        │
│                                                                              │
│    12 │                                                                      │
│    13 │   cwd_before = os.getcwd() # see note below                          │
│    14 │                                                                      │
│ ❱  15 │   psb.init(backend)                                                  │
│    16 │                                                                      │
│    17 │   # NOTE: For some reason I do not understand, calling psb.init() ch │
│    18 │   # As a simple workaround, we restore the CWD from before the call. │
│                                                                              │
│ ╭─────────────────────────── locals ────────────────────────────╮            │
│ │    backend = ''                                               │            │
│ │ cwd_before = '/gpfs/helios/home/joshua1/code/ut-ml-t18-lidar' │            │
│ ╰───────────────────────────────────────────────────────────────╯            │
╰──────────────────────────────────────────────────────────────────────────────╯
RuntimeError: [polyscope]  [EXCEPTION] Automatic initialization: no Polyscope 
backends could be initialized successfully.
/var/spool/slurm/slurmd/job53005160/slurm_script: line 31: 2306719 Segmentation fault      (core dumped) kiss_icp_pipeline --visualize /gpfs/space/projects/mlcourse/2024/t18-lidar/ground_removed_scenes/2024-03-25-15-42-22_mapping_tartu/non_ground_points
